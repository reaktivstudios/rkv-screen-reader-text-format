{"version":3,"sources":["../node_modules/prop-types/lib/ReactPropTypesSecret.js","../node_modules/prop-types/factoryWithThrowingShims.js","../node_modules/prop-types/index.js","sr-only/index.js","components/meta/checkbox.js","plugin-sidebars/rkv/components/rkv-sidebar.js","plugin-sidebars/rkv/index.js","plugin-sidebars/index.js","blocks.js"],"names":["ReactIs","throwOnDirectAccess","module","exports","require","__","wp","i18n","richText","registerFormatType","toggleFormat","RichTextToolbarButton","editor","name","title","srOnlyEdit","isActive","value","onChange","onFocus","type","propTypes","PropTypes","bool","string","func","tagName","className","edit","UserMetaCheckboxControl","CheckboxControl","components","select","data","Component","element","props","state","checked","setUserMetaValue","bind","changeChecked","apiFetch","path","method","then","response","UserMetaValue","meta","metaKey","setState","updateBodyClass","document","body","classList","add","remove","heading","label","help","defaultProps","RkvSidebar","PanelBody","PanelRow","hideSRTextValue","setHideSRTextValue","registerPlugin","plugins","editPost","PluginSidebar","PluginSidebarMoreMenuItem","sidebarName","sidebarLabel","render","icon"],"mappings":"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","file":"main.js","sourceRoot":"../src","sourcesContent":["/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = 'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED';\n\nmodule.exports = ReactPropTypesSecret;\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nvar ReactPropTypesSecret = require('./lib/ReactPropTypesSecret');\n\nfunction emptyFunction() {}\nfunction emptyFunctionWithReset() {}\nemptyFunctionWithReset.resetWarningCache = emptyFunction;\n\nmodule.exports = function() {\n  function shim(props, propName, componentName, location, propFullName, secret) {\n    if (secret === ReactPropTypesSecret) {\n      // It is still safe when called from React.\n      return;\n    }\n    var err = new Error(\n      'Calling PropTypes validators directly is not supported by the `prop-types` package. ' +\n      'Use PropTypes.checkPropTypes() to call them. ' +\n      'Read more at http://fb.me/use-check-prop-types'\n    );\n    err.name = 'Invariant Violation';\n    throw err;\n  };\n  shim.isRequired = shim;\n  function getShim() {\n    return shim;\n  };\n  // Important!\n  // Keep this list in sync with production version in `./factoryWithTypeCheckers.js`.\n  var ReactPropTypes = {\n    array: shim,\n    bool: shim,\n    func: shim,\n    number: shim,\n    object: shim,\n    string: shim,\n    symbol: shim,\n\n    any: shim,\n    arrayOf: getShim,\n    element: shim,\n    elementType: shim,\n    instanceOf: getShim,\n    node: shim,\n    objectOf: getShim,\n    oneOf: getShim,\n    oneOfType: getShim,\n    shape: getShim,\n    exact: getShim,\n\n    checkPropTypes: emptyFunctionWithReset,\n    resetWarningCache: emptyFunction\n  };\n\n  ReactPropTypes.PropTypes = ReactPropTypes;\n\n  return ReactPropTypes;\n};\n","/**\n * Copyright (c) 2013-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nif (process.env.NODE_ENV !== 'production') {\n  var ReactIs = require('react-is');\n\n  // By explicitly using `prop-types` you are opting into new development behavior.\n  // http://fb.me/prop-types-in-prod\n  var throwOnDirectAccess = true;\n  module.exports = require('./factoryWithTypeCheckers')(ReactIs.isElement, throwOnDirectAccess);\n} else {\n  // By explicitly using `prop-types` you are opting into new production behavior.\n  // http://fb.me/prop-types-in-prod\n  module.exports = require('./factoryWithThrowingShims')();\n}\n","/**\n * Register a screen reader only text format.\n *\n * @package screen-reader-only-format\n */\n\nimport PropTypes from 'prop-types';\nimport './sr-only.scss';\n\nconst { __ } = wp.i18n;\nconst { registerFormatType, toggleFormat } = wp.richText;\nconst { RichTextToolbarButton } = wp.editor;\n\nconst name = 'rkv/sr-only';\nconst title = __( 'Screen Reader Only', 'screen-reader-text-format' );\n\nconst srOnlyEdit = ({ isActive, value, onChange, onFocus }) => {\n\tconst onToggle = () => {\n\t\tonChange(toggleFormat(value, { type: name }));\n\t};\n\n\tconst onClick = () => {\n\t\tonToggle();\n\t\tonFocus();\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<RichTextToolbarButton icon=\"hidden\" title={title} onClick={onClick} isActive={isActive} />\n\t\t</>\n\t);\n};\n\nsrOnlyEdit.propTypes = {\n\tisActive: PropTypes.bool,\n\tvalue: PropTypes.string,\n\tonChange: PropTypes.func,\n\tonFocus: PropTypes.func,\n};\n\nregisterFormatType(name, {\n\ttitle,\n\ttagName: 'span',\n\tclassName: 'text-format-sr-only',\n\tedit: srOnlyEdit,\n});\n","/**\n * CheckboxControl that updates a UserMeta value.\n */\n\nimport PropTypes from 'prop-types';\n\nconst { CheckboxControl } = wp.components;\nconst { select } = wp.data;\nconst { Component } = wp.element;\n\nexport class UserMetaCheckboxControl extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tchecked: '',\n\t\t};\n\n\t\tthis.setUserMetaValue = this.setUserMetaValue.bind(this);\n\t\tthis.changeChecked = this.changeChecked.bind(this);\n\t}\n\n\tcomponentDidMount() {\n\t\twp.apiFetch( {\n\t\t\tpath: '/wp/v2/users/me',\n\t\t\tmethod: 'GET'\n\t\t} ).then( ( response ) => {\n\t\t\tconst UserMetaValue = response.meta[this.props.metaKey] || false;\n\t\t\tthis.setState({ checked: UserMetaValue });\n\t\t\tthis.props.onChange(UserMetaValue);\n\t\t\tthis.updateBodyClass(UserMetaValue);\n\t\t});\n\t}\n\n\tsetUserMetaValue(UserMetaValue) {\n\t\twp.apiFetch( {\n\t\t\tpath: '/wp/v2/users/me',\n\t\t\tmethod: 'POST',\n\t\t\tdata: {\n\t\t\t\tmeta: {\n\t\t\t\t\t[this.props.metaKey]: UserMetaValue,\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\t}\n\n\tchangeChecked(checked) {\n\t\tthis.setState({ checked });\n\t\tthis.setUserMetaValue(checked);\n\t\tthis.props.onChange(checked);\n\t\tthis.updateBodyClass(checked);\n\t}\n\n\tupdateBodyClass(checked) {\n\t\tif ( checked ) {\n\t\t\tdocument.body.classList.add( 'sr-only-show-always' );\n\t\t} else {\n\t\t\tdocument.body.classList.remove( 'sr-only-show-always' );\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { heading, label, help, className } = this.props;\n\n\t\treturn (\n\t\t\t<CheckboxControl\n\t\t\t\theading={heading}\n\t\t\t\tlabel={label}\n\t\t\t\thelp={help}\n\t\t\t\tchecked={this.state.checked}\n\t\t\t\tonChange={this.changeChecked}\n\t\t\t\tclassName={className}\n\t\t\t/>\n\t\t);\n\t}\n}\n\nUserMetaCheckboxControl.defaultProps = {\n\tclassName: '',\n\theading: '',\n\thelp: '',\n\tlabel: '',\n\tmetaKey: '',\n\tonChange: () => {},\n};\n\nUserMetaCheckboxControl.propTypes = {\n\tclassName: PropTypes.string,\n\theading: PropTypes.string,\n\thelp: PropTypes.string,\n\tlabel: PropTypes.string,\n\tmetaKey: PropTypes.string,\n\tonChange: PropTypes.func,\n};\n\nexport default UserMetaCheckboxControl;\n","/**\n * RKV plugin sidebar component.\n */\n\nimport UserMetaCheckboxControl from '../../../components/meta/checkbox';\n\nconst { __ } = wp.i18n;\nconst { Component } = wp.element;\nconst { PanelBody, PanelRow } = wp.components;\n\nexport class RkvSidebar extends Component {\n\tconstructor() {\n\t\tsuper();\n\n\t\t// Initialize the state.\n\t\tthis.state = {\n\t\t\thideSRTextValue: false,\n\t\t};\n\n\t\t// Bind methods to \"this\".\n\t\tthis.setHideSRTextValue = this.setHideSRTextValue.bind(this);\n\t}\n\n\tsetHideSRTextValue(hideSRTextValue) {\n\t\tthis.setState({ hideSRTextValue });\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<PanelBody title={__( 'Screen Reader Text Options', 'screen-reader-text-format' )} initialOpen={true}>\n\t\t\t\t<PanelRow>\n\t\t\t\t\t<UserMetaCheckboxControl\n\t\t\t\t\t\tlabel={__( 'Always show screen reader text?', 'screen-reader-text-format' )}\n\t\t\t\t\t\tmetaKey=\"show_sr_text_in_editor\"\n\t\t\t\t\t\tonChange={this.setHideSRTextValue}\n\t\t\t\t\t/>\n\t\t\t\t</PanelRow>\n\t\t\t</PanelBody>\n\t\t);\n\t}\n}\n\nexport default RkvSidebar;\n","/**\n * Registering a basic plugin with Gutenberg.\n * Adds functionality to Gutenberg by creating a sidebar plugin\n */\n\n// Import styles for the editor.\nimport './editor.scss';\n\n// Import dependencies.\nimport RkvSidebar from './components/rkv-sidebar';\n\nconst { __ } = wp.i18n;\nconst { registerPlugin } = wp.plugins;\nconst { PluginSidebar, PluginSidebarMoreMenuItem } = wp.editPost;\n\n// Set a unique name for the sidebar.\nconst sidebarName = 'rkv-screen-reader-text-visibility';\n\n// Add a label for the sidebar.\nconst sidebarLabel = __( 'Screen Reader Text Visibility' );\n\n// Render function.\nconst render = () => {\n\treturn (\n\t\t<>\n\t\t\t<PluginSidebarMoreMenuItem target={sidebarName} icon=\"visibility\">\n\t\t\t\t{sidebarLabel}\n\t\t\t</PluginSidebarMoreMenuItem>\n\t\t\t<PluginSidebar name={sidebarName} title={sidebarLabel}>\n\t\t\t\t<RkvSidebar />\n\t\t\t</PluginSidebar>\n\t\t</>\n\t);\n};\n\n// Register the plugin for use in Gutenberg.\nregisterPlugin( sidebarName, {\n\ticon: 'visibility',\n\trender,\n} );\n","/**\n * Import plugin sidebars.\n */\n\nimport './rkv';\n","/**\n * Gutenberg Blocks\n *\n * All blocks related JavaScript.\n * You can create a new block folder in\n * this dir and include code for that block\n * here as well.\n *\n * All blocks should be included here since\n * this is the file that Webpack is compiling.\n */\n\n// Screen reader only text format control.\nimport './sr-only';\nimport './plugin-sidebars';\n"]}